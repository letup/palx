说明：

1、所有返回值为bool的函数，均以false表示函数执行过程中发生错误。所有以引用为类型的参数均表示可能有数据从函数中返回。其中，
所有的缓冲区均由malloc函数分配。

2、EncodeYJ2Stream*、DecodeYJ2Stream*、DecodeYJ1Stream*
所有以上的流式编码（解码）函数，都需要首先调用Initialize函数初始化；之后调用Input输入数据，调用Output获得输出数据，最后调用
Finalize清除内部状态。值得注意的是，除了Initialize函数和Finalize函数之外，所有其他函数返回false预示着内部错误，需要立即调用
Finalize消除内部状态。可以通过调用Finished函数来确定编解码过程是否完成（对于解码，还将返回剩余在内部缓冲区尚未被用户读的数
据）；对于编码，在输入数据的时候需要指定该数据是否是最后一块。另外，对于YJ_2流式编码，Initialize函数需要一个长度，该长度会输
出到输出流的最初4字节（YJ_2格式规定）。如果对于输入数据的长度不确定，这里可随意指定，该长度不用于确定编码的长度界限；但是在
这种情况下，当编码完成后，请手动将正确的长度填入输出流的相应位置，否则可能会引发解码错误。对于YJ_1流式解码，其解码过程只有当
输入数据达到一个编码块的大小后才对该编码块进行解码。YJ_1流式编码由于该格式本身的问题不予实现。

3、EncodeYJ2、EncodeYJ2Stream*
YJ_2编码中有一个bCompatible参数，用于设置兼容性，主要是对于某些早期的YJ_2解码代码（如仙剑WIN95中的代码及之前版本的PalLibrary
中的代码）设置。对于此版本及后续版本的PalLibrary中的代码来说，可以设置为false。另外，非流式版本的EncodeYJ2的最大编码长度限制
为512MB，而流式版本则可达到4GB，不过二者一次性输出的最大编码数据长度均限制为512MB。

